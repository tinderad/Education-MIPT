//lexem type, ID, keyword

LEXEM(OPERATOR, ADD , "+")
LEXEM(OPERATOR, SUB , "-")
LEXEM(OPERATOR, LR, ";")
LEXEM(OPERATOR, EQ, "=")
LEXEM(OPERATOR, MUL, "*")
LEXEM(OPERATOR, DIV, "/")
LEXEM(OPERATOR, COMMA, ",")
LEXEM(OPERATOR, LBRACKET_ROUND, "(")
LEXEM(OPERATOR, RBRACKET_ROUND, ")")
LEXEM(OPERATOR, LBRACKET_SQUARE, "[")
LEXEM(OPERATOR, RBRACKET_SQUARE, "]")
LEXEM(OPERATOR, GR_THEN, ">")
LEXEM(OPERATOR, LR_THEN, "<")


LEXEM(OPERATOR, EQ_COMP, "FORTREE")

LEXEM(OPERATOR, DEC, "FORTREE")

LEXEM(KEYWORD, EQDEF, "\\eqdef")
LEXEM(KEYWORD, RETURN, "\\exists!")
LEXEM(KEYWORD, VAR_INIT, "\\exists")
LEXEM(KEYWORD, FORALL, "\\forall")
LEXEM(KEYWORD, IF,     "if")
LEXEM(OPERATOR, VAR_CLAIM, ":=")
LEXEM(KEYWORD, CONDITION_RIGHT_ARROW, "\\Rightarrow")