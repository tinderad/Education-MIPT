in
in
in
pop rcx
pop rbx
pop rax
call quadr
hlt


linear:
push 0
push rbx
je azero
push rbx
push rcx
neg
div
push 1
out
out
hlt

azero:
push 0
push rcx
jne zroots
push 8
out 
hlt

zroots:
push 0
out
hlt


quadr:
push 0
push rax
je linear
push 0
push rcx
je czero
call discr
push rdx
push 0
je dzero
push rdx
push 0
ja dplus
push 0
out
hlt

dplus:
push 2
out

push 2
push rax
mul
push rbx
neg
push rdx
sqrt
ADD
div
out


push 2
push rax
mul
push rdx
sqrt
push rbx
neg
sub
div
out
hlt

dzero:
push 1
out
push 2
push rax
mul
push rbx
neg
div
out
hlt

czero:
push rbx
push 0
je bzero
push 2
out
push 0
out
push rax
push rbx
neg
div
out
hlt

bzero:
push 1
out
push 0
out
hlt


discr:
# 4ac 
push 4
push rax
mul
push rcx
mul
# b^2
push rbx
push rbx
mul
dump
sub
pop rdx
return
end